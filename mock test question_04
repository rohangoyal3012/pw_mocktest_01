
4. Explain what is execution context in detail with diagram

ANS:

In JavaScript, the execution context is a concept that describes the environment in which a piece of code is executed. It consists of a set of variables, functions, and objects that are accessible at a given moment during the execution of the code. Understanding the execution context is crucial for understanding how JavaScript code behaves and how variables and functions are accessed.

The execution context can be visualized as a stack of contexts, where each context represents the current scope of execution. Let's dive into the details and explore the components of the execution context:

Global Execution Context:
The global execution context is the outermost context and is created when the JavaScript program starts running. It represents the global scope and includes the global object (window in a browser or global in Node.js) and the global scope variables and functions. It is always present throughout the execution of the code.

Function Execution Context:
Whenever a function is invoked, a new function execution context is created and added to the top of the execution context stack. This context represents the local scope of the function. Each function call creates a new execution context, which contains the function's arguments, local variables, and inner functions.

Execution Context Stack:
The execution context stack, also known as the call stack, keeps track of all the execution contexts that are currently active. The most recently created context is always at the top of the stack, and the context at the bottom is the global execution context. When a function is invoked, its execution context is pushed onto the stack, and when the function completes, its context is popped from the stack.

DIAGRAM :-
-----------------------------------------
|     Function Execution Context (fn2)   |
-----------------------------------------
|   Local Variables                      |
|   Arguments                            |
|   Inner Functions                      |
|   Scope Chain                          |
-----------------------------------------
|     Function Execution Context (fn1)   |
-----------------------------------------
|   Local Variables                      |
|   Arguments                            |
|   Inner Functions                      |
|   Scope Chain                          |
-----------------------------------------
|       Global Execution Context         |
-----------------------------------------
|   Global Variables                     |
|   Functions                            |
-----------------------------------------
